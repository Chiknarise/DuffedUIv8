local D, C, L = unpack(select(2, ...)) if not C["misc"].ErrorFilter then return endlocal Filter = {	[INVENTORY_FULL] = true,	[ERR_PARTY_LFG_BOOT_COOLDOWN_S] = true,	[ERR_PARTY_LFG_BOOT_LIMIT] = true,	[ERR_PETBATTLE_NOT_HERE] = true,	[ERR_PETBATTLE_NOT_WHILE_IN_COMBAT] = true,	[ERR_CANT_USE_ITEM] = true,	[CANT_USE_ITEM] = true,	[SPELL_FAILED_NOT_FISHABLE] = true,}local f, o = CreateFrame("Frame"), L.Help.NoErrorf:SetScript("OnEvent", function(self, event, error)	if Filter[error] then		UIErrorsFrame:AddMessage(error, 1, 0 ,0)	else		o = error	endend)SLASH_DUFFEDUIERROR1 = "/error"function SlashCmdList.DUFFEDUIERROR() print(o) endUIErrorsFrame:UnregisterEvent("UI_ERROR_MESSAGE")f:RegisterEvent("UI_ERROR_MESSAGE")