local D, C, L = select(2, ...):unpack()

local Ressources = CreateFrame("Frame", "AnchorFrameRessources", UIParent)
Ressources:Size(100, 15)
Ressources:Point("BOTTOM", UIParent, "BOTTOM", 0, 301)
Ressources:SetFrameStrata("TOOLTIP")
Ressources:SetFrameLevel(20)
Ressources:SetTemplate("Default")
Ressources:SetBackdropColor(0, 0, 0)
Ressources:SetBackdropBorderColor(1, 0, 0)
Ressources.Text = D.SetFontString(Ressources, C["medias"].Font, 12)
Ressources.Text:SetText(L.Movers.Ressources)
Ressources.Text:SetPoint("CENTER")
Ressources:SetMovable(true)
Ressources:SetUserPlaced(true)
Ressources:SetClampedToScreen(true)
Ressources:Hide()
--tinsert(D.AllowFrameMoving, AnchorFrameRessources)

local ClassTimer = CreateFrame("Frame", "AnchorFrameClassTimer", UIParent)
ClassTimer:Size(222, 15)
ClassTimer:Point("BOTTOM", UIParent, "BOTTOM", -300, 277)
ClassTimer:SetFrameStrata("TOOLTIP")
ClassTimer:SetFrameLevel(20)
ClassTimer:SetTemplate("Default")
ClassTimer:SetBackdropColor(0, 0, 0)
ClassTimer:SetBackdropBorderColor(1, 0, 0)
ClassTimer.Text = D.SetFontString(ClassTimer, C["medias"].Font, 12)
ClassTimer.Text:SetText(L.Movers.ClassTimer)
ClassTimer.Text:SetPoint("CENTER")
ClassTimer:SetMovable(true)
ClassTimer:SetUserPlaced(true)
ClassTimer:SetClampedToScreen(true)
ClassTimer:SetAlpha(0)
--tinsert(D.AllowFrameMoving, AnchorFrameClassTimer)

if C["classtimer"].TargetDebuffs then
	local ClassTimerDebuff = CreateFrame("Frame", "AnchorFrameClassTimerDebuff", UIParent)
	ClassTimerDebuff:Size(222, 15)
	ClassTimerDebuff:Point("BOTTOM", UIParent, "BOTTOM", 300, 360)
	ClassTimerDebuff:SetFrameStrata("TOOLTIP")
	ClassTimerDebuff:SetFrameLevel(20)
	ClassTimerDebuff:SetTemplate("Default")
	ClassTimerDebuff:SetBackdropColor(0, 0, 0)
	ClassTimerDebuff:SetBackdropBorderColor(1, 0, 0)
	ClassTimerDebuff.Text = D.SetFontString(ClassTimerDebuff, C["medias"].Font, 12)
	ClassTimerDebuff.Text:SetText(L.Movers.ClassTimerDebuff)
	ClassTimerDebuff.Text:SetPoint("CENTER")
	ClassTimerDebuff:SetMovable(true)
	ClassTimerDebuff:SetUserPlaced(true)
	ClassTimerDebuff:SetClampedToScreen(true)
	ClassTimerDebuff:SetAlpha(0)
	--tinsert(D.AllowFrameMoving, AnchorFrameClassTimerDebuff)
end

local BattleNet = CreateFrame("Frame", "AnchorFrameBNetHolder", UIParent)
BattleNet:SetTemplate("Default")
BattleNet:Size(BNToastFrame:GetWidth(), BNToastFrame:GetHeight())
BattleNet:Point("TOPLEFT", UIParent, "TOPLEFT", 3, -3)
BattleNet:SetClampedToScreen(true)
BattleNet:SetMovable(true)
BattleNet:SetBackdropBorderColor(1, 0, 0)
BattleNet.text = D.SetFontString(BattleNet, C["medias"].Font, 12)
BattleNet.text:SetPoint("CENTER")
BattleNet.text:SetText(L.Movers.BattleNet)
BattleNet:Hide()
--tinsert(D.AllowFrameMoving, BattleNet)